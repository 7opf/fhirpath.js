# Tests for 6.5 Comparisons

tests:
  - desc: 6.5. Boolean logic
  - desc: '* 6.5.1 and'
  - desc: '* and (true and true)'
    expression: ok1 and ok2
    result: [true]
  - desc: '* and (true and false)'
    expression: ok1 and ups1
    result: [false]
  - desc: '* and (true and false)'
    expression: ok1 and ups1
    result: [false]
  - desc: '* and (false and false)'
    expression: ok1 and ups1
    result: [false]

  - desc: '* 6.5.2 or'
  - desc: '* or (true and true)'
    expression: ok1 or ok2
    result: [true]
  - desc: '* or (true or false)'
    expression: ok1 or ups1
    result: [true]
  - desc: '* or (false or false)'
    expression: ups2 or ups1
    result: [false]

  - desc: '* 6.5.3 xor'
  - desc: '* xor (true xor true)'
    expression: ok1 xor ok2
    result: [false]
  - desc: '* xor (true xor false)'
    expression: ok1 xor ups1
    result: [true]
  - desc: '* xor (false xor true)'
    expression: ups1 xor ok1
    result: [true]
  - desc: '* or (false or false)'
    expression: ups2 xor ups1
    result: [false]

  - desc: '* 6.5.4 implies'
  - desc: '* implies (true implies true)'
    expression: ok1 implies ok2
    result: [true]
  - desc: '* implies (true implies false)'
    expression: ok1 implies ups1
    result: [true]
  - desc: '* implies (false implies true)'
    expression: ups1 implies ok1
    result: [false]
  - desc: '* implies (false implies false)'
    expression: ups2 implies ups1
    result: [true]

  - desc: '* in where TODO:'
    # expression: coll.where(a='a' and b='b')
    # result:
    #   - a: a
    #     b: b
subject:
  ok1: true
  ok2: true
  ups1: false
  ups2: false
  coll:
    - a: a
      b: b
    - a: b
      b: a
    - a: c
      b: d
